{% schema %}
{
  "name": "Testimonials",
  "settings": [],
  "blocks": [
    {
      "type": "testimonial",
      "name": "Testimonial",
      "settings": [
        {
          "type": "textarea",
          "id": "testimonial_text",
          "label": "Customer Testimonial"
        },
        {
          "type": "text",
          "id": "customer_name",
          "label": "Customer Name"
        },
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "text",
          "id": "testimonial_date",
          "label": "Date of Review"
        },
        {
          "type": "number",
          "id": "rating",
          "label": "Rating (1-5)"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Testimonials",
      "category": "Text"
    }
  ]
}
{% endschema %}


<section class="testimonial-section">
  <div class="testimonial-container">
    <h2 class="testimonial-title">What Our Customers Say</h2>
    
    <div class="testimonial-slider" id="testimonial-slider">
      {% assign testimonials = section.blocks %}
      <div class="testimonial-items">
        {% for block in testimonials %}
          <div class="testimonial-item" data-index="{{ forloop.index }}">
            <div class="testimonial-rating">

              {% for i in (1..5) %}
                <span class="star{% if i <= block.settings.rating %} filled{% endif %}">&#9733;</span>
              {% endfor %}
            </div>
            <h3 class="testimonial-title">{{ block.settings.title }}</h3>
            <p class="testimonial-description">{{ block.settings.testimonial_text }}</p>
            <h4 class="testimonial-author">{{ block.settings.customer_name }}</h4>
            <p class="testimonial-date">{{ block.settings.testimonial_date }}</p>
          </div>
        {% endfor %}
      </div>
    </div>

   <div class="testimonial-pagination" id="testimonial-pagination">
    {% assign totalPages = section.blocks.size | divided_by: 3.0 | ceil %}
    {% for i in (1..totalPages) %}
      <span class="pagination-dot{% if forloop.first %} active{% endif %}" data-page="{{ forloop.index }}"></span>
    {% endfor %}
  </div>

  </div>
</section>



<style>
  .testimonial-section {
    text-align: center;
    padding: 40px;
    background-color:#F7F7F7;
  }
  
  .testimonial-container {
    max-width: 1200px;
    margin: 0 auto;
    overflow: hidden;
  }
  
  .testimonial-slider {
    display: flex;
    transition: transform 0.5s ease;
    width: 100%;
  }
  
  .testimonial-items {
    display: flex;
    width: 100%;
  }
  
  .testimonial-item {
    flex: 0 0 32.20%;
    padding: 20px;
    box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.1);
    background: white;
    border-radius: 10px;
    margin-right: 20px;
    display: block;
  }
  
  .testimonial-item:last-child {
    margin-right: 0;
  }
  
  .testimonial-rating .star {
    color: #d3d3d3;
  }
  
  .testimonial-rating .filled {
    color: #ffcc00;
  }
  
  .testimonial-title {
    font-size: 1.5em;
  }

  .testimonial-author {
    margin-top: 10px;
    font-weight: bold;
  }
  
  .testimonial-date {
    font-size: 0.9em;
    color: #888;
  }
  
  .testimonial-pagination {
    display: flex;
    justify-content: center;
    margin-top: 20px;
    margin-bottom:5px;
  }
  
  .pagination-dot {
    cursor: pointer;
    width: 10px;
    height: 10px;
    margin: 0 5px;
    background-color: transparent; 
    border: 1px solid #000; 
    border-radius: 50%;
    display: inline-block;
    transition: background-color 0.3s ease, border-color 0.3s ease;
    position: relative; 
  }
  
  .pagination-dot.active {
    background-color: #000; 
    border: 1px solid #000; 
  }
  
  
  .pagination-dot.active::after {
    content: "";
    position: absolute;
    top: 50%; 
    left: 50%;
    transform: translate(-50%, -50%); 
    width: 18px; 
    height: 18px;
    border: 1px solid #000; 
    border-radius: 50%;
  }
  
  @media (max-width: 1024px) {
    /* PÃ«r tablet */
    .testimonial-item {
      flex: 0 0 48%; 
    }
  }
  
  @media (max-width: 768px) {
  
    .testimonial-item {
      flex: 0 0 100%;
      margin-right: 0; 
    }

    .testimonial-pagination {
      margin-top: 10px;
      display: none;
    }
  }
  
  @media (max-width: 480px) {
  
    .testimonial-item {
      padding: 15px; 
    }
  
    .testimonial-title {
      font-size: 1.2em; 
    }
  
    .testimonial-description {
      font-size: 0.9em; 
    }
  
    .testimonial-author {
      font-size: 0.9em; 
    }
  
    .testimonial-date {
      font-size: 0.8em; 
    }
  }
</style>

<script>
  document.addEventListener("DOMContentLoaded", function () {
  const testimonialSlider = document.querySelector(".testimonial-slider");
  const testimonialItems = document.querySelectorAll(".testimonial-item");
  const paginationContainer = document.getElementById("testimonial-pagination");
  let currentPage = 0;
  let isDragging = false;
  let startX = 0;
  let currentTranslate = 0;
  let prevTranslate = 0;

  function getTestimonialsPerPage() {
    if (window.innerWidth <= 480) {
      return 1;
    } else if (window.innerWidth <= 768) {
      return 1; 
    } else if (window.innerWidth <= 1024) {
      return 2;
    } else {
      return 3; 
    }
  }

  function getTestimonialWidth() {
    const testimonial = testimonialItems[0];
    const style = window.getComputedStyle(testimonial);
    return testimonial.offsetWidth + parseFloat(style.marginRight);
  }

  function createPaginationDots() {
    const testimonialsPerPage = getTestimonialsPerPage();
    const totalPages = Math.ceil(testimonialItems.length / testimonialsPerPage); 


    paginationContainer.innerHTML = "";

    for (let i = 0; i < totalPages; i++) {
      const dot = document.createElement("span");
      dot.classList.add("pagination-dot");
      if (i === currentPage) {
        dot.classList.add("active");
      }
      dot.addEventListener("click", () => goToPage(i));
      paginationContainer.appendChild(dot);
    }
  }


  function showTestimonials() {
    const testimonialsPerPage = getTestimonialsPerPage();
    const slideWidth = getTestimonialWidth() * testimonialsPerPage;
    currentTranslate = -currentPage * slideWidth;
    testimonialSlider.style.transform = `translateX(${currentTranslate}px)`;

    const dots = document.querySelectorAll(".pagination-dot");
    dots.forEach((dot, index) => {
      dot.classList.remove("active");
      if (index === currentPage) {
        dot.classList.add("active");
      }
    });
  }

  function goToPage(page) {
    const testimonialsPerPage = getTestimonialsPerPage();
    const totalPages = Math.ceil(testimonialItems.length / testimonialsPerPage);

    if (page < 0) {
      currentPage = 0;
    } else if (page >= totalPages) {
      currentPage = totalPages - 1;
    } else {
      currentPage = page;
    }

    showTestimonials();
  }

  testimonialSlider.addEventListener("touchstart", function (e) {
    isDragging = true;
    startX = e.touches[0].clientX;
    prevTranslate = currentTranslate;
  });

  testimonialSlider.addEventListener("touchmove", function (e) {
    if (!isDragging) return;
    const currentX = e.touches[0].clientX;
    const diffX = currentX - startX;
    currentTranslate = prevTranslate + diffX;
    testimonialSlider.style.transform = `translateX(${currentTranslate}px)`;
  });

  testimonialSlider.addEventListener("touchend", function () {
    if (!isDragging) return;
    isDragging = false;

    const slideWidth = getTestimonialWidth() * getTestimonialsPerPage();
    const movedBy = currentTranslate - prevTranslate;

    if (Math.abs(movedBy) > slideWidth * 0.3) {
      if (movedBy > 0) {
        goToPage(currentPage - 1); 
      } else {
        goToPage(currentPage + 1); 
      }
    } else {
      showTestimonials();
    }
  });

 
  createPaginationDots();

  window.addEventListener("resize", function () {
    createPaginationDots();
    showTestimonials();
  });

  showTestimonials();
});
</script>
